package com.selmec.plantaselmec.Models;
// Generated Oct 21, 2014 4:26:41 PM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Prueba generated by hbm2java
 */
@JsonIgnoreProperties(ignoreUnknown = true)
@Entity
@Table(name = "prueba", catalog = "test"
)
@Inheritance(strategy = InheritanceType.JOINED)
public class Prueba implements java.io.Serializable {

    private Integer id;
    private Ensamble ensamble;
    private Incidencias incidencias;
    private int tipo;
    private int estatus;
    private Date dtInicio;
    private Date dtFin;
    private String comentario;
    private Integer aprueba;
    private Date dtAprueba;
    private Integer apruebaSupervisor;
    private Date dtApruebaSupervisor;
    private Cargasubita cargasubita;
    private Pruebacontrol pruebacontrol;
    private Set<Lecturas> lecturases = new HashSet<Lecturas>(0);
    private Pruebacarga pruebacarga;

    public Prueba() {
    }

    public Prueba(Ensamble ensamble, int tipo, int estatus, Date dtInicio, Date dtFin) {
        this.ensamble = ensamble;
        this.tipo = tipo;
        this.estatus = estatus;
        this.dtInicio = dtInicio;
        this.dtFin = dtFin;
    }

    public Prueba(Ensamble ensamble, Incidencias incidencias, int tipo, int estatus, Date dtInicio, Date dtFin, String comentario, Integer aprueba, Date dtAprueba, Integer apruebaSupervisor, Date dtApruebaSupervisor, Cargasubita cargasubita, Pruebacontrol pruebacontrol, Set lecturases, Pruebacarga pruebacarga) {
        this.ensamble = ensamble;
        this.incidencias = incidencias;
        this.tipo = tipo;
        this.estatus = estatus;
        this.dtInicio = dtInicio;
        this.dtFin = dtFin;
        this.comentario = comentario;
        this.aprueba = aprueba;
        this.dtAprueba = dtAprueba;
        this.apruebaSupervisor = apruebaSupervisor;
        this.dtApruebaSupervisor = dtApruebaSupervisor;
        this.cargasubita = cargasubita;
        this.pruebacontrol = pruebacontrol;
        this.lecturases = lecturases;
        this.pruebacarga = pruebacarga;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EnsambleID", nullable = false)
    public Ensamble getEnsamble() {
        return this.ensamble;
    }

    public void setEnsamble(Ensamble ensamble) {
        this.ensamble = ensamble;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "IncidenciaID")
    public Incidencias getIncidencias() {
        return this.incidencias;
    }

    public void setIncidencias(Incidencias incidencias) {
        this.incidencias = incidencias;
    }

    @Column(name = "Tipo", nullable = false)
    public int getTipo() {
        return this.tipo;
    }

    public void setTipo(int tipo) {
        this.tipo = tipo;
    }

    @Column(name = "Estatus", nullable = false)
    public int getEstatus() {
        return this.estatus;
    }

    public void setEstatus(int estatus) {
        this.estatus = estatus;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "dtInicio", nullable = false, length = 19)
    public Date getDtInicio() {
        return this.dtInicio;
    }

    public void setDtInicio(Date dtInicio) {
        this.dtInicio = dtInicio;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "dtFin", nullable = false, length = 19)
    public Date getDtFin() {
        return this.dtFin;
    }

    public void setDtFin(Date dtFin) {
        this.dtFin = dtFin;
    }

    @Column(name = "Comentario", length = 250)
    public String getComentario() {
        return this.comentario;
    }

    public void setComentario(String comentario) {
        this.comentario = comentario;
    }

    @Column(name = "Aprueba")
    public Integer getAprueba() {
        return this.aprueba;
    }

    public void setAprueba(Integer aprueba) {
        this.aprueba = aprueba;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "dtAprueba", length = 19)
    public Date getDtAprueba() {
        return this.dtAprueba;
    }

    public void setDtAprueba(Date dtAprueba) {
        this.dtAprueba = dtAprueba;
    }

    @Column(name = "ApruebaSupervisor")
    public Integer getApruebaSupervisor() {
        return this.apruebaSupervisor;
    }

    public void setApruebaSupervisor(Integer apruebaSupervisor) {
        this.apruebaSupervisor = apruebaSupervisor;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "dtApruebaSupervisor", length = 19)
    public Date getDtApruebaSupervisor() {
        return this.dtApruebaSupervisor;
    }

    public void setDtApruebaSupervisor(Date dtApruebaSupervisor) {
        this.dtApruebaSupervisor = dtApruebaSupervisor;
    }

//    @OneToOne(fetch = FetchType.LAZY, mappedBy = "prueba", cascade=CascadeType.ALL)
//    public Cargasubita getCargasubita() {
//        return this.cargasubita;
//    }
//
//    public void setCargasubita(Cargasubita cargasubita) {
//        this.cargasubita = cargasubita;
//    }
//
//    @OneToOne(fetch = FetchType.LAZY, mappedBy = "prueba", cascade=CascadeType.ALL)
//    public Pruebacontrol getPruebacontrol() {
//        return this.pruebacontrol;
//    }
//
//    public void setPruebacontrol(Pruebacontrol pruebacontrol) {
//        this.pruebacontrol = pruebacontrol;
//    }
//
//    @OneToOne(fetch = FetchType.LAZY, mappedBy = "prueba", cascade=CascadeType.ALL)
//    public Pruebacarga getPruebacarga() {
//        return this.pruebacarga;
//    }
//
//    public void setPruebacarga(Pruebacarga pruebacarga) {
//        this.pruebacarga = pruebacarga;
    // }
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "prueba")
    public Set<Lecturas> getLecturases() {
        return this.lecturases;
    }

    public void setLecturases(Set<Lecturas> lecturases) {
        this.lecturases = lecturases;
    }

}
