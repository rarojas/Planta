<?xml version='1.0' encoding='UTF-8' ?>
<!-- was: <?xml version="1.0" encoding="UTF-8"?> -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:mvc="http://www.springframework.org/schema/mvc"      
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />
        
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}" />
        
    <bean id="dataSourceMySQL"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${jdbcMysql.driverClassName}"
          p:url="${jdbcMysql.url}"
          p:username="${jdbcMysql.username}"
          p:password="${jdbcMysql.password}" />
    
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceMySQL" />
        <property name="configLocation" value="classpath:hibernateMySql.cfg.xml" />        
    </bean>
    <bean id="jdbctemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg>
            <ref bean="dataSource"/>
        </constructor-arg>    
    </bean>
    <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />
    <tx:annotation-driven />
    <mvc:annotation-driven />
    <bean id="transactionManager" primary="true"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
        <qualifier value="mysql"/>
    </bean>       
    <bean id="transactionManagerInformix"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <qualifier value="transactionManagerInformix"/>
    </bean>  
    
    <context:component-scan base-package="com.selmec"  />    
    
    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <constructor-arg value="ThisIsASecretSoChangeMe" />
    </bean>
    <bean id="userDao" class="com.selmec.plantaselmec.services.UserService">
    </bean>
    <bean id="randomGenerator" class="com.selmec.Utils.RandomGenerator"></bean>
     
    <security:authentication-manager  id="authenticationManager">
        <security:authentication-provider user-service-ref="userDao" >         
        </security:authentication-provider>
    </security:authentication-manager>
      
    <security:http 
        realm="Protected API"        
        auto-config="true"  use-expressions="true"                   
        authentication-manager-ref="authenticationManager">   
        <security:session-management>
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"  />
        </security:session-management>
        <security:form-login
            login-page="/login" 
            default-target-url="/" 
            authentication-failure-url="/login?error" 
            username-parameter="username"
            password-parameter="password"/>
        <security:logout logout-success-url="/login?logout" />
        <security:intercept-url pattern="/" access="isAuthenticated()"  />        
    </security:http>
   
    <bean id="authenticationTokenProcessingFilter" class="com.selmec.rest.AuthenticationTokenProcessingFilter" >
        <constructor-arg ref="userDao" />
    </bean>
    <bean id="unauthorizedEntryPoint" class="com.selmec.rest.UnauthorizedEntryPoint" />

    
    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>
    
</beans>


